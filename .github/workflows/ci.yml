name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  backend-tests:
    name: Backend Tests (Laravel)
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16-alpine
        env:
          POSTGRES_DB: budget_manager_test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: secret
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

      redis:
        image: redis:7-alpine
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
      - uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          extensions: pdo, pgsql, mbstring, xml, redis
          coverage: none

      - name: Copy .env
        run: |
          cd backend
          cp .env.example .env
          sed -i 's/DB_HOST=postgres/DB_HOST=localhost/' .env
          sed -i 's/REDIS_HOST=redis/REDIS_HOST=localhost/' .env

      - name: Install Dependencies
        run: |
          cd backend
          composer install --prefer-dist --no-progress

      - name: Generate key
        run: |
          cd backend
          php artisan key:generate

      - name: Run Migrations
        run: |
          cd backend
          php artisan migrate --force

      - name: Execute tests
        run: |
          cd backend
          php artisan test

  frontend-build:
    name: Frontend Build (Vue + TypeScript)
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        run: |
          cd frontend
          npm ci

      - name: TypeScript Check
        run: |
          cd frontend
          npm run build

      - name: Lint check
        run: |
          cd frontend
          npm run lint || true

  docker-build:
    name: Docker Build Test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Build Docker images
        run: docker compose build

      - name: Start services
        run: docker compose up -d

      - name: Wait for services
        run: sleep 30

      - name: Check services health
        run: |
          docker compose ps
          curl -f http://localhost:8080/api/health || exit 1

      - name: Stop services
        run: docker compose down
